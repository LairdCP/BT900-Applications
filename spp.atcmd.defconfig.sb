//******************************************************************************
// Laird Technologies (c) 2014
//
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++                                                                      ++
// +++++  When UwTerminal downloads the app it will store it as a filenname   ++
// +++++  which consists of all characters up to the first . and excluding it ++
// +++++                                                                      ++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
// spp.atcmd.defconfig
//
//
// This smartBASIC application provides a command line interface for testing SPP.
//
// - See file 'spp.atcmd.sblib' for a description of the commands for this application.
//
//
// This top level .sb file is used to configure the application for individual modules
// so you can configure and save a different copy of this file for each module.
// It #includes atcmd.btc.spp.sblib.
// 
// *Instructions*
//      1. Set FRIENDLY_NAME to the name you want other devices to identify your module as
//      2. Set PEER_BT_ADDR to the BT Address of the peer device you want to connect to by default
//      3. Set PAIRABLE_ON_STARTUP, DISCOVERABLE_ON_STARTUP, OPEN_SPP_ON_STARTUP and CONNECT_ON_STARTUP
//
//
// *Example* - 2 BT900 modules. BT900-A is an SPP client and connects to BT900-B, an SPP server
//      ::BT900-A config::
//          #define CONNECT_ON_STARTUP       1
//          #define PEER_BT_ADDR             "112233AABBCC"     //BT address of BT900-B
//
//      ::BT900-B config::
//          #define OPEN_SPP_ON_STARTUP      1                 //connect to BT900-A on startup
//          #define CONNECT_ON_STARTUP       0
//          #define DISCOVERABLE_ON_STARTUP  1
//
//
// ::Note::
//      - Upon connection, the module will automatically switch to bridge mode. Any data arriving
//        at the SPP port will be sent to the UART and vice versa. 
//
//        -> To switch back to command mode so the module can accept commands again, assert the 
//           nAutorun pin. This can be done by unticking DTR in UwTerminal. Switch back to bridge mode
//           by deasserting the nAutorun pin - ticking DTR in UwTerminal.
//
//        -> If using a BT900 Development kit, make sure DIP Switch 2 on CON12 is in the ON position.
//
//      - Whenever SPP port is opened, module will be discoverable for time DISCOV_TIMEOUT
//      - On a disconnection event, if SPP port is open, module will be discoverable
//      - Module will be connectable on a disconnection
//      - On a connection event, module will not be connectable or discoverable
//      - If SPP port is closed, the device will not be discoverable unless enabled manually
//
//******************************************************************************

//******************************************************************************
// Definitions
//******************************************************************************

        //Default BT Friendly Name - name of device seen by other devices
#define FRIENDLY_NAME                    "Laird BT900"

        //Set this to the BT address of the BT classic device you want to connect to by default
#define PEER_BT_ADDR                     "0016A4093A5F"

        //if set to 1, on startup an SPP port will be opened for peer devices to connect to
#define OPEN_SPP_ON_STARTUP                 0

        //if set to 1, on startup the module will connect to device PEER_BT_ADDR for SPP
#define CONNECT_ON_STARTUP                  0

#define PAIRABLE_ON_STARTUP                 0

#define DISCOVERABLE_ON_STARTUP             1       //if OPEN_SPP_ON_STARTUP==1, discoverablilty will be enabled for DISCOV_TIMEOUT specified

        //0 - General, 1 - Limited
#define DISCOV_MODE                         0

        //time module will be discoverable for in seconds if discoverabilty enabled
#define DISCOV_TIMEOUT                     60

#define USE_BRIDGE                          1   //Set to 0 to use smartBASIC to transfer data between UART and SPP, set to 1 to use direct briding (faster throughput)


//Inquiry config parameters (See description for BtcInquiryConfig() in BT900 Extention user manual)
#define INQR_TMT                           10   //Inquiry timeout in seconds   
#define INQR_TYPE                          0    //Inquiry type - general inquiry     
#define INQR_MODE                          2    //Inquiry mode - extended inquiry        
#define MAX_DEVS_REC_RESP                  100  //Max number of devices to receive inquiry responses from

        //for subsequent incoming pair requests, if set to 1, pairing information will be saved in bonding manager
#define SAVE_PAIRINGS                      1         

        //Set this to 0 to disable all debugging messages
#define ENABLE_DEBUG_PRINTS                1



//******************************************************************************
// Library Import
//******************************************************************************
#include "lib\spp.atcmd.sblib"



